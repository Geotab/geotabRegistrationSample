{"version":3,"sources":["../../app/scripts/configImporter.js"],"names":[],"mappings":"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","file":"configImporter.js","sourcesContent":["(function (global) {\r\n    var extend = function() {\r\n            var args = arguments,\r\n                length = args.length,\r\n                src, srcKeys, srcAttr,\r\n                fullCopy = false,\r\n                resAttr,\r\n                res = args[0], i = 1, j,\r\n                isUsualObject = function (obj) {\r\n                    return Object.prototype.toString.call(obj).indexOf(\"Object\") !== -1;\r\n                };\r\n\r\n            if (typeof res === \"boolean\") {\r\n                fullCopy = res;\r\n                res = args[1];\r\n                i++;\r\n            }\r\n            while (i !== length) {\r\n                src = args[i];\r\n                srcKeys = Object.keys(src);\r\n                for (j = 0; j < srcKeys.length; j++) {\r\n                    srcAttr = src[srcKeys[j]];\r\n                    if (fullCopy && (isUsualObject(srcAttr) || Array.isArray(srcAttr))) {\r\n                        resAttr = res[srcKeys[j]];\r\n                        resAttr = res[srcKeys[j]] = (isUsualObject(resAttr) || Array.isArray(resAttr)) ? resAttr : (Array.isArray(srcAttr) ? [] : {});\r\n                        extend(fullCopy, resAttr, srcAttr);\r\n                    } else {\r\n                        res[srcKeys[j]] = src[srcKeys[j]];\r\n                    }\r\n                }\r\n                i++;\r\n            }\r\n            return res;\r\n        },\r\n        getResolvedPromise = function () {\r\n            return new Promise(function(fakeResolver){ return fakeResolver([]); });\r\n        },\r\n        call = geotab.api.post,\r\n        multiCall = geotab.api.multiCall,\r\n        defaultGroupId = \"GroupCompanyId\",\r\n        defaultPrivateGroupId = \"GroupPrivateUserId\",\r\n        AVAILABLE_RECIPIENT_TYPES = [\r\n            \"AssignToGroup\",\r\n            \"BeepTenTimesRapidly\",\r\n            \"BeepTenTimesRapidlyAllowDelay\",\r\n            \"BeepThreeTimes\",\r\n            \"BeepThreeTimesAllowDelay\",\r\n            \"BeepThreeTimesRapidly\",\r\n            \"BeepThreeTimesRapidlyAllowDelay\",\r\n            \"ChangeStatus\",\r\n            \"Email\",\r\n            \"LogOnly\",\r\n            \"LogPopup\",\r\n            \"LogUrgentPopup\",\r\n            \"TextMessage\",\r\n            \"TextToSpeech\",\r\n            \"TextToSpeechAllowDelay\",\r\n            \"WebRequest\"\r\n        ],\r\n        MAX_REQUEST_SIZE_LIMIT = 4194304;\r\n\r\n    global.configImporter = function (config, user, server, credentials) {\r\n        var newUser = extend(true, {}, user),\r\n            importedData = {},\r\n            // Remove recipients that are not in allowed recipients list\r\n            filterRecipients = function (distributionLists) {\r\n                distributionLists.forEach(function (listItem) {\r\n                    listItem.recipients = listItem.recipients.filter(function (recipient) {\r\n                        return AVAILABLE_RECIPIENT_TYPES.indexOf(recipient.recipientType) > -1;\r\n                    });\r\n                });\r\n            },\r\n            importConfig = function () {\r\n                var importSequence = [\r\n                    {types: [\"groups\"], importer: importGroups},\r\n                    {types: [\"securityGroups\"], importer: importCustomGroups},\r\n                    {types: [\"customMaps\"], importer: importCustomMaps},\r\n                    {types: [\"workHolidays\", \"workTimes\", \"zoneTypes\"], importer: importGroupsOfEntities},\r\n                    {types: [\"users\"], importer: importUsers},\r\n                    {types: [\"diagnostics\"], importer: importDiagnostics},\r\n                    {types: [\"zones\", \"devices\", \"notificationTemplates\"], importer: importGroupsOfEntities},\r\n                    {types: [\"rules\"], importer: importRules},\r\n                    {types: [\"distributionLists\"], importer: importGroupsOfEntities, filter: filterRecipients},\r\n                    {types: [\"reports\"], importer: importReports},\r\n                    {types: [\"misc\"], importer: importMiscSettings}\r\n                ];\r\n                return new Promise(function(resolve, reject) {\r\n                    importSequence.reduce(function(result, levelImportParams) {\r\n                            var dataForImport = levelImportParams.types.map(function(entityType) {\r\n                                levelImportParams.filter && config[entityType] && levelImportParams.filter(config[entityType], entityType);\r\n                                return {type: entityType, data: config[entityType]};\r\n                            });\r\n\r\n                            return result.then(function () {\r\n                                return levelImportParams.importer(dataForImport);\r\n                            });\r\n                        }, getResolvedPromise())\r\n                        .then(function () {\r\n                            resolve({\r\n                                importedData: importedData,\r\n                                user: newUser\r\n                            });\r\n                        }).catch(reject);\r\n                });\r\n            },\r\n\r\n            importGroups = function (groupsData) {\r\n                var groups = groupsData[0].data,\r\n                    splitGroupsByLevels = function () {\r\n                        var processedIds = [defaultGroupId],\r\n                            levelItems,\r\n                            levelIds,\r\n                            levels = [],\r\n                            parentIds = [defaultGroupId, defaultPrivateGroupId];\r\n                        do {\r\n                            levelItems = findItemsWithParents(parentIds);\r\n                            levelIds = levelItems.map(function (item) {return item.id});\r\n                            levels.push(levelItems);\r\n                            processedIds = processedIds.concat(levelIds);\r\n                            parentIds = levelIds;\r\n                        } while (parentIds.length > 0);\r\n                        return levels;\r\n                    },\r\n                    findItemsWithParents = function (oldParentIds) {\r\n                        return groups.reduce(function (items, group) {\r\n                            group.parent && oldParentIds.indexOf(group.parent.id) > -1 && items.push(group);\r\n                            return items;\r\n                        }, []);\r\n                    },\r\n                    getUserByPrivateGroupId = function (groupId) {\r\n                        var currentUser = config.misc.currentUser,\r\n                            users = config.users,\r\n                            outputUser,\r\n                            userHasPrivateGroup = function (user, groupId) {\r\n                                return user.privateUserGroups.some(function(group) {\r\n                                    if(group.id === groupId) {\r\n                                        return true;\r\n                                    }\r\n                                });\r\n                            };\r\n                        if(userHasPrivateGroup(currentUser, groupId)) {\r\n                            outputUser = newUser;\r\n                        } else {\r\n                            users.some(function(userItem) {\r\n                                if(userHasPrivateGroup(userItem, groupId)) {\r\n                                    outputUser = userItem;\r\n                                    return true;\r\n                                }\r\n                            })\r\n                        }\r\n                        return outputUser;\r\n                    },\r\n                    generateAddGroupRequest = function (group) {\r\n                        var oldId = group.id,\r\n                            oldParentId = group.parent && group.parent.id,\r\n                            privateUser = group.user,\r\n                            newId = importedData.groups[oldId],\r\n                            newParentId = oldParentId && importedData.groups[oldParentId],\r\n                            request,\r\n                            newGroup;\r\n                        if(group.name && !newId && newParentId) {\r\n                            newGroup = extend(true, {}, group);\r\n                            newGroup.id = null;\r\n                            newGroup.children = [];\r\n                            newGroup.parent = { id: newParentId };\r\n                            delete(newGroup.user);\r\n                            if (newParentId === defaultPrivateGroupId) {\r\n                                if(privateUser) {\r\n                                    newGroup = {\r\n                                        name: privateUser.name,\r\n                                        color: {r: 0, g: 0, b: 0, a: 0},\r\n                                        parent: {\r\n                                            id: defaultPrivateGroupId\r\n                                        }\r\n                                    };\r\n                                } else {\r\n                                    return null;\r\n                                }\r\n                            }\r\n                            request = [\"Add\", {\r\n                                typeName: \"Group\",\r\n                                entity: newGroup\r\n                            }];\r\n                        }\r\n                        return request;\r\n                    },\r\n                    parseResults = function (levelGroups, results) {\r\n                        results.forEach(function (result, index) {\r\n                            var groupParentId = levelGroups[index].parent.id,\r\n                                groupUser = getUserByPrivateGroupId(levelGroups[index].id);\r\n                            result && (importedData.groups[levelGroups[index].id] = result);\r\n                            groupParentId === defaultPrivateGroupId && groupUser && groupUser.name === newUser.name && newUser.privateUserGroups.push({id: result});\r\n                        })\r\n                    },\r\n                    groupsLevels = splitGroupsByLevels(groups);\r\n\r\n                importedData.groups = {};\r\n                importedData.groups[defaultGroupId] = defaultGroupId;\r\n                importedData.groups[defaultPrivateGroupId] = defaultPrivateGroupId;\r\n                return groupsLevels.reduce(function (addPromise, levelGroups, index) {\r\n                    return addPromise.then(function () {\r\n                        var requests;\r\n                        requests = levelGroups.reduce(function (requests, levelGroup) {\r\n                            var addRequest = generateAddGroupRequest(levelGroup);\r\n                            addRequest && requests.push(addRequest);\r\n                            return requests;\r\n                        }, []);\r\n                        if (requests.length) {\r\n                            return multiCall(server, requests, credentials);\r\n                        } else {\r\n                            return [];\r\n                        }\r\n                    }).then(function(previousResult){\r\n                        parseResults(groupsLevels[index], previousResult);\r\n                    });\r\n                }, new Promise(function(fakeResolver){ return fakeResolver([]); }));\r\n            },\r\n\r\n            updateGroupsIds = function (object, properties, groupsHash) {\r\n                var updateGroup = function (item) {\r\n                    groupsHash[item.id] && (item.id = groupsHash[item.id]);\r\n                    delete item.children;\r\n                };\r\n                Object.keys(object).forEach(function (property) {\r\n                    var value = object[property];\r\n                    if (properties.indexOf(property) > -1) {\r\n                        Array.isArray(value) ?\r\n                            value.forEach(function (item) { updateGroup(item); }) :\r\n                            (value.id && updateGroup(value));\r\n                    }\r\n                })\r\n            },\r\n\r\n            updateZoneTypesIds = function (object, zoneTypesHash) {\r\n                object.zoneTypes.forEach(function (item) {\r\n                    item.id && (item.id = zoneTypesHash[item.id]);\r\n                })\r\n            },\r\n\r\n            importCustomMaps = function (customMaps) {\r\n                if(!customMaps || !customMaps.length) {\r\n                    return getResolvedPromise();\r\n                }\r\n                return call(server, \"Get\", {\r\n                    credentials: credentials,\r\n                    typeName: \"SystemSettings\"\r\n                }).then(function (result) {\r\n                    var systemSettings = result[0],\r\n                        customMapsData = customMaps[0].data;\r\n                    customMapsData && (systemSettings.customWebMapProviderList = customMapsData);\r\n                    return call(server, \"Set\", {\r\n                        credentials: credentials,\r\n                        typeName: \"SystemSettings\",\r\n                        entity: systemSettings\r\n                    });\r\n                })\r\n            },\r\n\r\n            importCustomGroups = function (groupsData) {\r\n                var splitGroupsByLevels = function (groups) {\r\n                        var processedIds = [],\r\n                            levelItems,\r\n                            levelIds,\r\n                            levels = [],\r\n                            parentIds;\r\n                        do {\r\n                            levelItems = findItemsWithParents(groups, parentIds);\r\n                            levelIds = levelItems.map(function (item) {return item.id});\r\n                            levels.push(levelItems);\r\n                            processedIds = processedIds.concat(levelIds);\r\n                            parentIds = levelIds;\r\n                        } while (parentIds.length > 0);\r\n                        return levels;\r\n                    },\r\n                    findItemsWithParents = function (groups, oldParentIds) {\r\n                        return groups.reduce(function (items, group) {\r\n                            if(!oldParentIds) {\r\n                                (!group.parent || (group.parent && group.parent.id.indexOf(\"Group\") > -1)) && items.push(group);\r\n                            } else {\r\n                                group.parent && oldParentIds.indexOf(group.parent.id) > -1 && items.push(group);\r\n                            }\r\n                            return items;\r\n                        }, []);\r\n                    },\r\n                    generateAddGroupRequest = function (group, groupType) {\r\n                        var oldId = group.id,\r\n                            oldParentId = group.parent && group.parent.id,\r\n                            newId = importedData[groupType][oldId],\r\n                            newParentId = oldParentId && (importedData[groupType][oldParentId] || oldParentId),\r\n                            request,\r\n                            newGroup;\r\n                        if(group.name && !newId && newParentId) {\r\n                            newGroup = extend(true, {}, group);\r\n                            newGroup.id = null;\r\n                            newGroup.children = [];\r\n                            newGroup.parent = { id: newParentId };\r\n                            request = [\"Add\", {\r\n                                typeName: \"Group\",\r\n                                entity: newGroup\r\n                            }];\r\n                        }\r\n                        return request;\r\n                    },\r\n                    parseResults = function (levelGroups, results, groupType) {\r\n                        results.forEach(function (result, index) {\r\n                            result && (importedData[groupType][levelGroups[index].id] = result);\r\n                        })\r\n                    };\r\n\r\n                return groupsData.reduce(function (promises, groupTypeData) {\r\n                    var groupType = groupTypeData.type,\r\n                        groups = groupTypeData.data,\r\n                        groupsLevels = splitGroupsByLevels(groups);\r\n                    importedData[groupType] = {};\r\n                    return groupsLevels.reduce(function (addPromise, levelGroups, index) {\r\n                        return addPromise.then(function () {\r\n                            var requests;\r\n                            requests = levelGroups.reduce(function (requests, levelGroup) {\r\n                                var addRequest = generateAddGroupRequest(levelGroup, groupType);\r\n                                addRequest && requests.push(addRequest);\r\n                                return requests;\r\n                            }, []);\r\n                            if (requests.length) {\r\n                                return multiCall(server, requests, credentials);\r\n                            } else {\r\n                                return [];\r\n                            }\r\n                        }).then(function(previousResult){\r\n                            parseResults(groupsLevels[index], previousResult, groupType);\r\n                        });\r\n                    }, promises);\r\n                }, new Promise(function(fakeResolver){ return fakeResolver([]); }));\r\n            },\r\n\r\n            importGroupsOfEntities = function (entitiesData) {\r\n                var initialData = [],\r\n                    requests = entitiesData.reduce(function(requests, entityData) {\r\n                        var type = entityData.type,\r\n                            data = entityData.data;\r\n                        initialData = initialData.concat(data);\r\n                        return data ? requests.concat(generateAddRequests(data, type)) : requests;\r\n                    }, []);\r\n                return multiCall(server, requests, credentials).then(function(importedData) {\r\n                    updateImportedData(requests, initialData, importedData);\r\n                }).catch(function (e) {\r\n                    console.error(e);\r\n                    console.log(requests);\r\n                });\r\n            },\r\n\r\n            generatePassword = function () {\r\n                var symbols = \"!@#$%^&*(){}[]?\",\r\n                    passw = uuid.v4().slice(0, 8).split(\"\"), // 8 symbols array\r\n                    rand = function (max) {\r\n                        return Math.floor(Math.random() * (max + 1)); // 0 .. max\r\n                    },\r\n                    upperCaseLetter = String.fromCharCode(rand(26) + 65);\r\n                passw.splice(rand(8), 0, upperCaseLetter);\r\n                passw.splice(rand(9), 0, symbols[rand(symbols.length)]);\r\n                return passw.join(\"\");\r\n            },\r\n\r\n            importUsers = function (usersData) {\r\n                var users = usersData[0].data,\r\n                    inactiveUsers = [],\r\n                    method = \"Add\",\r\n                    requests = users.reduce(function(requests, user) {\r\n                        var entityCopy = extend(true, {}, user);\r\n                        delete(entityCopy.availableDashboardReports);\r\n                        delete(entityCopy.activeDashboardReports);\r\n                        if(entityCopy.name !== newUser.name) {\r\n                            entityCopy.password = generatePassword();\r\n                            entityCopy.changePassword = \"true\";\r\n                            delete(entityCopy.id);\r\n                            if (new Date(user.activeTo) < new Date()) {\r\n                                inactiveUsers.push(user);\r\n                            }\r\n                        } else {\r\n                            method = \"Set\";\r\n                            entityCopy = extend(true, entity, newUser);\r\n                            newUser = entityCopy;\r\n                        }\r\n                        updateGroupsIds(entityCopy, [\"companyGroups\", \"driverGroups\", \"privateUserGroups\", \"reportGroups\"], importedData.groups);\r\n                        updateGroupsIds(entityCopy, [\"securityGroups\"], importedData.securityGroups);\r\n\r\n                        requests.push([\r\n                            method, {\r\n                                typeName: \"User\",\r\n                                entity: entityCopy\r\n                            }]);\r\n                        return requests;\r\n                    }, []);\r\n                return multiCall(server, requests, credentials).then(function(res) {\r\n                    updateImportedData(requests, users, res);\r\n                }).then(function() { // Disactivate users that should be inactive\r\n                    var updateRequests = [];\r\n                    if(inactiveUsers.length) {\r\n                        updateRequests = inactiveUsers.reduce(function(requests, user) {\r\n                            requests.push([\"Set\", {\r\n                                typeName: \"User\",\r\n                                entity: {\r\n                                    id: importedData.User[user.id],\r\n                                    activeTo: user.activeTo\r\n                                }\r\n                            }]);\r\n                            return requests;\r\n                        }, []);\r\n                    }\r\n                    return multiCall(server, updateRequests, credentials);\r\n                }).catch(function (e) {\r\n                    console.error(e);\r\n                    console.log(requests);\r\n                });\r\n            },\r\n\r\n            generateAddRequests = function (entities, entityType) {\r\n                return entities && entities.reduce(function (requests, entity) {\r\n                    var method = \"Add\",\r\n                        entityCopy = extend(true, {}, entity),\r\n                        requestTypeName;\r\n                    switch(entityType) {\r\n                        case \"users\":\r\n                            requestTypeName = \"User\";\r\n                            delete(entityCopy.availableDashboardReports);\r\n                            delete(entityCopy.activeDashboardReports);\r\n                            if(entityCopy.name !== newUser.name) {\r\n                                entityCopy.password = generatePassword();\r\n                                entityCopy.changePassword = \"true\";\r\n                            } else {\r\n                                method = \"Set\";\r\n                                entityCopy = extend(true, entity, newUser);\r\n                                newUser = entityCopy;\r\n                            }\r\n                            updateGroupsIds(entityCopy, [\"companyGroups\", \"driverGroups\", \"privateUserGroups\", \"reportGroups\"], importedData.groups);\r\n                            updateGroupsIds(entityCopy, [\"securityGroups\"], importedData.securityGroups);\r\n                            break;\r\n                        case \"devices\":\r\n                            requestTypeName = \"Device\";\r\n                            updateGroupsIds(entityCopy, [\"groups\", \"autoGroups\"], importedData.groups);\r\n                            entityCopy.workTime.id && (entityCopy.workTime.id = importedData.WorkTime[entityCopy.workTime.id]);\r\n                            break;\r\n                        case \"zones\":\r\n                            requestTypeName = \"Zone\";\r\n                            updateZoneTypesIds(entityCopy, importedData.ZoneType);\r\n                            updateGroupsIds(entityCopy, [\"groups\"], importedData.groups);\r\n                            break;\r\n                        case \"zoneTypes\":\r\n                            requestTypeName = \"ZoneType\";\r\n                            break;\r\n                        case \"workTimes\":\r\n                            requestTypeName = \"WorkTime\";\r\n                            !entityCopy.name && (method = \"Set\");\r\n                            entityCopy.details && entityCopy.details.forEach(function(detail) {detail.id && delete(detail.id)});\r\n                            break;\r\n                        case \"workHolidays\":\r\n                            requestTypeName = \"WorkHoliday\";\r\n                            break;\r\n                        case \"notificationTemplates\":\r\n                            requestTypeName = \"NotificationBinaryFile\";\r\n                            delete(entityCopy.id);\r\n                            break;\r\n                        case \"distributionLists\":\r\n                            requestTypeName = \"DistributionList\";\r\n                            entityCopy.recipients && entityCopy.recipients.forEach(function (recipient) {\r\n                                recipient.user && recipient.user.id && (recipient.user.id = importedData.User[recipient.user.id]);\r\n                                if (recipient.notificationBinaryFile && recipient.notificationBinaryFile.id) {\r\n                                    recipient.notificationBinaryFile = {\r\n                                        id: importedData.NotificationBinaryFile && importedData.NotificationBinaryFile[recipient.notificationBinaryFile.id] || recipient.notificationBinaryFile.id\r\n                                    };\r\n                                }\r\n                                updateGroupsIds(recipient, [\"group\"], importedData.groups);\r\n                                recipient.id && delete(recipient.id);\r\n                            });\r\n                            entityCopy.rules && entityCopy.rules.forEach(function(rule) {\r\n                                rule.id && importedData.rules[rule.id] && (rule.id = importedData.rules[rule.id]);\r\n                            });\r\n                            break;\r\n                    }\r\n                    method === \"Add\" && delete(entityCopy.id);\r\n                    requests.push([method, {\r\n                        typeName: requestTypeName,\r\n                        entity: entityCopy\r\n                    }]);\r\n                    return requests;\r\n                }, []);\r\n            },\r\n\r\n            importDiagnostics = function (diagnosticsData) {\r\n                var diagnostics = diagnosticsData[0].data,\r\n                    requests = diagnostics.reduce(function(requests, diagnostic) {\r\n                        requests.push([\r\n                            \"Get\", {\r\n                                typeName: \"Diagnostic\",\r\n                                search: {\r\n                                    id: diagnostic.id\r\n                                }\r\n                            }]);\r\n                        return requests;\r\n                    }, []);\r\n                return multiCall(server, requests, credentials).then(function(importedData) {\r\n                    updateImportedData(requests, diagnostics, importedData, null, function(importedItem) {\r\n                        return importedItem && importedItem.length && importedItem[0].id;\r\n                    });\r\n                }).catch(function (e) {\r\n                    console.error(e);\r\n                    console.log(requests);\r\n                });\r\n            },\r\n\r\n            importRules = function (rulesData) {\r\n                var rules = rulesData[0].data,\r\n                    removeExistedRules = function () {\r\n                        return call(server, \"Get\", {\r\n                            credentials: credentials,\r\n                            typeName: \"Rule\",\r\n                            search: {\r\n                                baseType: \"Custom\"\r\n                            }\r\n                        }).then(function (result) {\r\n                            var requests = result.reduce(function (res, rule) {\r\n                                res.push([\"Remove\", {\r\n                                    typeName: \"Rule\",\r\n                                    entity: {\r\n                                        id: rule.id\r\n                                    }\r\n                                }]);\r\n                                return res;\r\n                            }, []);\r\n                            return multiCall(server, requests, credentials);\r\n                        })\r\n                    },\r\n                    updateDependencies = function (rules) {\r\n                        var updateConditionsData = function(condition) {\r\n                                delete(condition.id);\r\n                                delete(condition.sequence);\r\n                                switch (condition.conditionType) {\r\n                                    case \"RuleWorkHours\":\r\n                                    case \"AfterRuleWorkHours\":\r\n                                        condition.workTime && condition.workTime.id && (condition.workTime.id = importedData.WorkTime[condition.workTime.id]);\r\n                                        break;\r\n                                    case \"Driver\":\r\n                                        condition.driver && condition.driver.id && (condition.driver.id = importedData.User[condition.driver.id]);\r\n                                        break;\r\n                                    case \"Device\":\r\n                                        condition.device && condition.device.id && (condition.device.id = importedData.Device[condition.device.id]);\r\n                                        break;\r\n                                    case \"EnteringArea\":\r\n                                    case \"ExitingArea\":\r\n                                    case \"OutsideArea\":\r\n                                    case \"InsideArea\":\r\n                                        condition.zone ? (condition.zone.id && importedData.Zone[condition.zone.id] && (condition.zone.id = importedData.Zone[condition.zone.id])) :\r\n                                            (condition.zoneType.id && importedData.ZoneType[condition.zoneType.id] && (condition.zoneType.id = importedData.ZoneType[condition.zoneType.id]));\r\n                                        break;\r\n                                    case \"FilterStatusDataByDiagnostic\":\r\n                                    case \"ActiveOrInactiveFault\":\r\n                                    case \"Fault\":\r\n                                        if (condition.diagnostic && condition.diagnostic.id && !importedData.Diagnostic[condition.diagnostic.id]) {\r\n                                            return false;\r\n                                        }\r\n                                        break;\r\n                                }\r\n                                return true;\r\n                            },\r\n                            checkConditions = function (parentCondition) {\r\n                                var children;\r\n                                if (!updateConditionsData(parentCondition)) {\r\n                                    return false;\r\n                                }\r\n                                children = parentCondition.children || [];\r\n                                return children.every(function (condition) {\r\n                                    if (condition.children) {\r\n                                        return checkConditions(condition);\r\n                                    }\r\n                                    if (!updateConditionsData(condition)) {\r\n                                        return false;\r\n                                    }\r\n                                    return true;\r\n                                }, true);\r\n                            };\r\n                        return rules.reduce(function (rulesForImport, rule) {\r\n                            updateGroupsIds(rule, \"groups\", importedData.groups);\r\n                            checkConditions(rule.condition) && rulesForImport.push(rule);\r\n                            return rulesForImport;\r\n                        }, []);\r\n                    },\r\n                    getStockRuleParams = function(rule) {\r\n                        var parseDurationInMinutes = function() {\r\n                                if (!rule.condition || !rule.condition.conditionType || rule.condition.conditionType !== \"DurationLongerThan\") {\r\n                                    if (rule && rule.condition && rule.condition.conditionType === \"And\") {\r\n                                        for (var idx in rule.condition.children) {\r\n                                            var child = rule.condition.children[idx];\r\n                                            if (child.conditionType === \"DurationLongerThan\") {\r\n                                                return parseFloat(child.value / 60);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    return 20;\r\n                                }\r\n                                return parseFloat(rule.condition.value / 60);\r\n                            },\r\n                            parseMaxValue = function() {\r\n                                if (!rule.condition || !rule.condition.conditionType || rule.condition.conditionType !== \"IsValueLessThan\") {\r\n                                    return null;\r\n                                }\r\n                                return parseFloat(rule.condition.value);\r\n                            },\r\n                            parseMinValue = function() {\r\n                                if (!rule.condition || !rule.condition.conditionType || rule.condition.conditionType !== \"IsValueMoreThan\") {\r\n                                    return null;\r\n                                }\r\n                                return parseFloat(rule.condition.value);\r\n                            },\r\n                            parseMinValueOfChildRule = function() {\r\n                                if (!rule.condition || !rule.condition.children.length|| !rule.condition.children[0].conditionType || rule.condition.children[0].conditionType !== \"IsValueMoreThan\") {\r\n                                    return null;\r\n                                }\r\n                                return parseFloat(rule.condition.children[0].value);\r\n                            },\r\n                            parseReverseAtTripStartDistanceValue = function() {\r\n                                if (!rule.condition || rule.condition.conditionType !== \"DistanceLongerThan\" || !rule.condition.children) {\r\n                                    return null;\r\n                                }\r\n                                var children = rule.condition.children;\r\n                                if (!children[0] || children[0].conditionType !== \"And\" || !children[0].children) {\r\n                                    return null;\r\n                                }\r\n                                for (var i = 0; i < children[0].children.length; i++) {\r\n                                    var c = children[0].children[i];\r\n                                    if (c.children && c.children[0] && c.children[0].conditionType === \"TripDistance\") {\r\n                                        return parseFloat(c.value);\r\n                                    }\r\n                                }\r\n                                return null;\r\n                            },\r\n                            parseFleetIdlingZone = function() {\r\n                                if (rule && rule.condition && rule.condition.children && rule.condition.children[0] && rule.condition.children[0].children) {\r\n                                    for (var i = 0; i < rule.condition.children[0].children.length; i++) {\r\n                                        var condition = rule.condition.children[0].children[i];\r\n                                        if (condition.conditionType === \"InsideArea\" && condition.zoneType === \"ZoneTypeOfficeId\") {\r\n                                            return true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return false;\r\n                            },\r\n                            stockRuleType = rule.id,\r\n                            params = [];\r\n\r\n                        switch (stockRuleType) {\r\n                            case \"RuleHarshBrakingId\":\r\n                                params = [parseMaxValue()];\r\n                                break;\r\n                            case \"RuleJackrabbitStartsId\":\r\n                                params = [parseMinValue()];\r\n                                break;\r\n                            case \"RuleHarshCorneringId\":\r\n                                var value;\r\n                                if (rule.condition && rule.condition.children && rule.condition.children[0]) {\r\n                                    value = rule.condition.children[0].value;\r\n                                }\r\n                                params = [value];\r\n                                break;\r\n                            case \"RulePostedSpeedingId\":\r\n                                params = [parseMinValueOfChildRule()];\r\n                                break;\r\n                            case \"RuleReverseAtStartId\":\r\n                                params = [parseReverseAtTripStartDistanceValue() || 20];\r\n                                break;\r\n                            case \"RuleIdlingId\":\r\n                            case \"RuleAtOfficeLongerThanId\":\r\n                            case \"RuleLongLunchId\":\r\n                            case \"RuleLongStopsDuringWorkHoursId\":\r\n                                params = [parseDurationInMinutes()];\r\n                                break;\r\n                            case \"RuleFleetIdlingId\":\r\n                                params = [parseDurationInMinutes(), parseFleetIdlingZone()];\r\n                                break;\r\n                        }\r\n                        return params;\r\n                    },\r\n                    customTypeGetter = function () {\r\n                        return \"rules\";\r\n                    },\r\n                    customIdGetter = function (result, oldId) {\r\n                        return result.id || oldId;\r\n                    },\r\n                    requests;\r\n                rules = updateDependencies(rules);\r\n                requests = rules.reduce(function (requests, rule) {\r\n                    var ruleCopy;\r\n                    if(rule.baseType === \"Stock\") {\r\n                        requests.push([\"SetStockExceptionRule\", {\r\n                            stockRuleDefinition: {\r\n                                id: rule.id,\r\n                                param: getStockRuleParams(rule)\r\n                            }\r\n                        }]);\r\n                    } else {\r\n                        ruleCopy = extend(true, {}, rule);\r\n                        delete(ruleCopy.id);\r\n                        delete(ruleCopy.version);\r\n                        requests.push([\"SetExceptionRuleWithConditions\", {\r\n                            newRule: ruleCopy,\r\n                            oldRule: null\r\n                        }]);\r\n                    }\r\n                    return requests;\r\n                }, []);\r\n                return removeExistedRules().then(function () {\r\n                    return multiCall(server, requests, credentials);\r\n                }).then(function(importedRules) {\r\n                    updateImportedData(requests, rules, importedRules, customTypeGetter, customIdGetter);\r\n                }).catch(function (e) {\r\n                    console.error(e);\r\n                    console.log(requests);\r\n                });\r\n            },\r\n\r\n            updateImportedData = function(requests, initialData, newData, customTypeGetter, customIdGetter) {\r\n                requests && requests.length && requests.forEach(function (request, index) {\r\n                    var oldId = initialData[index].id,\r\n                        newId = customIdGetter ? customIdGetter(newData[index], oldId) : (newData[index] || oldId),\r\n                        type = customTypeGetter ? customTypeGetter(request) : request[1].typeName;\r\n                    if(!importedData[type]) {\r\n                        importedData[type] = {};\r\n                    }\r\n                    importedData[type][oldId] = newId;\r\n                });\r\n            },\r\n\r\n            importReports = function (reportsData) {\r\n                var reports = reportsData[0].data,\r\n                    importTemplatesAndGetReports = function (templates) {\r\n                        var getReportsRequest = [\"GetReportSchedules\", {\r\n                                \"includeTemplateDetails\": true,\r\n                                \"applyUserFilter\": false\r\n                            }],\r\n                            lastGroupSize = JSON.stringify(getReportsRequest).length * 2;\r\n                        var requests = templates.reduce(function (requests, template) {\r\n                            var templateCopy = extend(true, {}, template),\r\n                                request,\r\n                                requestSize; \r\n                            if (!template.isSystem) {\r\n                                delete templateCopy.id;\r\n                                delete templateCopy.reports;\r\n                                request = [\"Add\", {\r\n                                    typeName: \"ReportTemplate\",\r\n                                    entity: templateCopy\r\n                                }];\r\n                            } else {\r\n                                delete templateCopy.binaryData;\r\n                                request = [\"Set\", {\r\n                                    typeName: \"ReportTemplate\",\r\n                                    entity: templateCopy\r\n                                }];\r\n                            }\r\n                            requestSize = JSON.stringify(request).length * 2;\r\n                            if (requestSize > MAX_REQUEST_SIZE_LIMIT) {\r\n                                throw new Error(`Too large report template. Max size is: ${MAX_REQUEST_SIZE_LIMIT} bytes.`);\r\n                            }\r\n                            if (lastGroupSize + requestSize > MAX_REQUEST_SIZE_LIMIT) {\r\n                                requests.push([request]);\r\n                                lastGroupSize = requestSize;\r\n                            } else {\r\n                                requests[requests.length - 1].push(request);\r\n                                lastGroupSize += requestSize;\r\n                            }\r\n                            return requests;\r\n                        }, [[getReportsRequest]]);\r\n                        return Promise.all(requests.map(function(group) {\r\n                            return multiCall(server, group, credentials);\r\n                        })).then(function(response) {\r\n                            let ungroupData = grouppedData => grouppedData.reduce((res, groupData) => res.concat(groupData), []);\r\n                            // Concat groupped data into one array\r\n                            let data = ungroupData(response);\r\n                            updateImportedData(ungroupData(requests).slice(1), templates, data.slice(1), () => \"templates\");\r\n                            return data;\r\n                        });\r\n                    },\r\n                    getReportsForImport = function (templates, importedTemplates) {\r\n                        return templates.reduce(function (reports, template, templateIndex) {\r\n                            var templateReports = template.reports,\r\n                                newTemplateId = importedTemplates[templateIndex] || template.id;\r\n                            return templateReports.reduce(function (templateReports, report) {\r\n                                var reportCopy = extend(true, {}, report);\r\n                                reportCopy.template = {id: newTemplateId};\r\n                                reportCopy.lastModifiedUser = {id: user.id};\r\n                                reportCopy.id = null;\r\n                                updateGroupsIds(reportCopy, [\"groups\", \"includeAllChildrenGroups\", \"includeDirectChildrenOnlyGroups\", \"scopeGroups\"], importedData.groups);\r\n                                updateReportDevices(reportCopy);\r\n                                updateReportRules(reportCopy);\r\n                                templateReports.push(reportCopy);\r\n                                return templateReports;\r\n                            }, reports);\r\n                        }, []);\r\n                    },\r\n                    updateReportDevices = function (report) {\r\n                        if (!report.arguments || !report.arguments.devices) {\r\n                            return;\r\n                        }\r\n                        report.arguments.devices.forEach(function(device) {\r\n                            var id = device && device.id;\r\n                            id && importedData.devices[id] && (device.id = importedData.devices[id]);\r\n                        })\r\n                    },\r\n                    updateReportRules = function (report) {\r\n                        if (!report.arguments || !report.arguments.rules) {\r\n                            return;\r\n                        }\r\n                        report.arguments.rules.forEach(function(rule) {\r\n                            var id = rule && rule.id;\r\n                            id && importedData.rules[id] && (rule.id = importedData.rules[id]);\r\n                        })\r\n                    },\r\n                    importReports = function (reports, existedReports) {\r\n                        var reportsForUpdate = [],\r\n                            getReportForImport = function (report) {\r\n                                var templateId = report.template.id,\r\n                                    destination = report.destination,\r\n                                    existedReportData,\r\n                                    method = \"Add\";\r\n                                existedReports.some(function (existedReport) {\r\n                                    var existedTemplateId = existedReport.template.id,\r\n                                        existedDestination = existedReport.destination;\r\n                                    if (existedTemplateId === templateId && existedDestination === destination) {\r\n                                        existedReportData = existedReport;\r\n                                        return true;\r\n                                    }\r\n                                });\r\n                                if (existedReportData) {\r\n                                    method = \"Set\";\r\n                                    report.id = existedReportData.id;\r\n                                    reportsForUpdate.push(existedReportData.id);\r\n                                }\r\n                                return {\r\n                                    method: method,\r\n                                    report: report\r\n                                }\r\n                            },\r\n                            requests = reports.reduce(function (requests, report) {\r\n                                var requestData = getReportForImport(report);\r\n                                requests.push([requestData.method, {\r\n                                    typeName: \"CustomReportSchedule\",\r\n                                    entity: requestData.report\r\n                                }]);\r\n                                return requests;\r\n                            }, []);\r\n                        existedReports.reduce(function (requests, existedReport) {\r\n                            reportsForUpdate.indexOf(existedReport.id) === -1 && requests.push([\r\n                                \"Remove\", {\r\n                                    typeName: \"CustomReportSchedule\",\r\n                                    entity: existedReport\r\n                                }\r\n                            ]);\r\n                            return requests;\r\n                        }, requests);\r\n                        return multiCall(server, requests, credentials);\r\n                    };\r\n                importedData.reports = {};\r\n                importedData.templates = {};\r\n                return importTemplatesAndGetReports(reports).then(([existedReports, ...importedTemplates]) => {\r\n                    let reportsForImport = getReportsForImport(reports, importedTemplates);\r\n                    return importReports(reportsForImport, existedReports);\r\n                });\r\n            },\r\n\r\n            importMiscSettings = function (miscData) {\r\n                var miscData = miscData[0].data,\r\n                    providerData = miscData.mapProvider,\r\n                    updateUserTemplates = function (user, exportedUser, importedTemplatesData) {\r\n                        Object.keys(importedTemplatesData).forEach(function (oldId) {\r\n                            var newId = importedTemplatesData[oldId],\r\n                                availIndex = exportedUser.availableDashboardReports.indexOf(oldId),\r\n                                activeIndex = exportedUser.activeDashboardReports.indexOf(oldId);\r\n                            availIndex > -1 && (exportedUser.availableDashboardReports[availIndex] = newId);\r\n                            activeIndex > -1 && (exportedUser.activeDashboardReports[activeIndex] = newId);\r\n                        });\r\n                        user.availableDashboardReports = exportedUser.availableDashboardReports;\r\n                        user.activeDashboardReports = exportedUser.activeDashboardReports;\r\n                    };\r\n                newUser.defaultMapEngine = providerData.value;\r\n                updateUserTemplates(newUser, miscData.currentUser, importedData.templates);\r\n                return call(server, \"Get\", {\r\n                    credentials: credentials,\r\n                    typeName: \"SystemSettings\"\r\n                }).then(function (result) {\r\n                    var systemSettings = result[0];\r\n                    providerData.type === \"additional\" && (systemSettings.mapProvider = providerData.value);\r\n                    miscData.isUnsignedAddinsAllowed && (systemSettings.allowUnsignedAddIn = miscData.isUnsignedAddinsAllowed);\r\n                    miscData.addins && (systemSettings.customerPages = miscData.addins);\r\n                    miscData.emailSenderFrom && (systemSettings.emailSenderFrom = miscData.emailSenderFrom);\r\n                    miscData.purgeSettings && (systemSettings.purgeSettings = miscData.purgeSettings);\r\n                    miscData.customerClassification && (systemSettings.customerClassification = miscData.customerClassification);\r\n                    miscData.isMarketplacePurchasesAllowed && (systemSettings.allowMarketplacePurchases = miscData.isMarketplacePurchasesAllowed);\r\n                    miscData.isResellerAutoLoginAllowed && (systemSettings.allowResellerAutoLogin = miscData.isResellerAutoLoginAllowed);\r\n                    miscData.isThirdPartyMarketplaceAppsAllowed && (systemSettings.allowThirdPartyMarketplaceApps = miscData.isThirdPartyMarketplaceAppsAllowed);\r\n\r\n                    return call(server, \"Set\", {\r\n                        credentials: credentials,\r\n                        typeName: \"SystemSettings\",\r\n                        entity: systemSettings\r\n                    });\r\n                });\r\n            };\r\n\r\n        return {\r\n            import: importConfig\r\n        }\r\n    }\r\n})(window);\r\n"]}