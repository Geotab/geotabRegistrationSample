{"version":3,"sources":["../../app/scripts/geotab.api.js"],"names":[],"mappings":"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","file":"geotab.js","sourcesContent":["/**\r\n * A minimalistic helper to make requests to the MyGeotab API.\r\n */\r\n(function () {\r\n  'use strict';\r\n\r\n  /**\r\n   * The default timeout for requests\r\n   * @type {number}\r\n   */\r\n  var timeout = 300000, // 5 minutes\r\n\r\n    /**\r\n     * The jsonp name space\r\n     * @type {string}\r\n     */\r\n    JSONP_REQUESTS_PROPERTY_STR = 'geotabJSONP',\r\n\r\n    /**\r\n     * Get endpoint for host name\r\n     * @param host {string} - the host name (ex. 'my.geotab.com')\r\n     * @returns {string}\r\n     */\r\n    getEndpoint = function (host) {\r\n      return 'https://' + host + '/apiv1';\r\n    },\r\n\r\n    /**\r\n     *  Construct an XMLHttpRequest POST request for a MyGeotab API call\r\n     *  @param {String} server - the host name (ex. 'my.geotab.com')\r\n     *  @param {String} method - the name of the API method\r\n     *  @param {Object} params - the method parameters\r\n     *  @return {Object} - a promise that will supply the results\r\n     */\r\n    post = function (server, method, params) {\r\n      return new Promise(function (resolve, reject) {\r\n        var xhr = new XMLHttpRequest();\r\n        var errorString;\r\n        xhr.open('POST', getEndpoint(server), true);\r\n\r\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n        xhr.addEventListener('abort', function (e) {\r\n          reject(Error(e));\r\n        });\r\n\r\n        xhr.onreadystatechange = function () {\r\n          var data,\r\n            error,\r\n            result;\r\n\r\n          if (xhr.readyState === 4) {\r\n\r\n            if (xhr.status !== 200) {\r\n              if (xhr.responseText) {\r\n                errorString = xhr.responseText;\r\n              } else if (xhr.target || xhr.status === 0) {\r\n                errorString = 'Network Error: Couldn\\'t connect to the server. Please check your network connection and try again.';\r\n              }\r\n              reject(Error(errorString));\r\n            }\r\n\r\n            try {\r\n              data = JSON.parse(xhr.responseText);\r\n\r\n              if (data && data.error) {\r\n                error = data.error.errors && data.error.errors.length ? data.error.errors[0] : data.error;\r\n                reject(error);\r\n              } else {\r\n                result = data.result;\r\n                resolve(result);\r\n              }\r\n            } catch (e) {\r\n              reject(e);\r\n            }\r\n\r\n          }\r\n        };\r\n\r\n        // create JSON string payload\r\n        var rpcString;\r\n        try {\r\n          rpcString = JSON.stringify({\r\n            method: method || '',\r\n            params: params\r\n          });\r\n        } catch (e) {\r\n          reject(e);\r\n          return;\r\n        }\r\n\r\n        xhr.timeout = timeout;\r\n        xhr.send('JSON-RPC=' + encodeURIComponent(rpcString));\r\n      });\r\n    },\r\n\r\n    /**\r\n     *  Cleans up the call with the given unique ID\r\n     *  @private\r\n     *  @param {String} uid The unique ID of the response callback\r\n     */\r\n    cleanupCall = function (uid) {\r\n      // Remove this function once we're done with it\r\n      var script = document.getElementById(uid);\r\n      if (script) {\r\n        script.parentNode.removeChild(script);\r\n        // Manually garbage-collect the script\r\n        for (var prop in script) {\r\n          if (script.hasOwnProperty(prop)) {\r\n            delete script[prop];\r\n          }\r\n        }\r\n      }\r\n      delete window[JSONP_REQUESTS_PROPERTY_STR][uid];\r\n    },\r\n\r\n    /**\r\n     *  Construct a JSONP request for a MyGeotab API call\r\n     *  @param {String} server - the host name (ex. 'my.geotab.com')\r\n     *  @param {String} method - the name of the API method\r\n     *  @param {Object} params - the method parameters\r\n     *  @return {Object} - a promise that will supply the results\r\n     */\r\n    jsonp = function (server, method, params) {\r\n      return new Promise(function (resolve, reject) {\r\n        var uid = 'json' + (Math.random() * 100).toString().replace(/\\./g, '');\r\n        var buildParamString = function () {\r\n          var query = [];\r\n\r\n          params = params || {};\r\n\r\n          for (var key in params) {\r\n            if (params.hasOwnProperty(key)) {\r\n              query.push.apply(query, ['&', encodeURIComponent(key), '=', encodeURIComponent(JSON.stringify(params[key]))]);\r\n            }\r\n          }\r\n\r\n          return query.join('');\r\n        };\r\n        var timeoutTimer;\r\n\r\n        window[JSONP_REQUESTS_PROPERTY_STR][uid] = function JSONPResponse(data) {\r\n          // Clear timeout timer first\r\n          if (timeoutTimer) {\r\n            clearTimeout(timeoutTimer);\r\n            timeoutTimer = null;\r\n          }\r\n\r\n          // Try to handle the response from the server\r\n          try {\r\n            if (data && data.error) {\r\n              reject(Error(data.error));\r\n            } else {\r\n              resolve(data.result);\r\n            }\r\n          } finally {\r\n            cleanupCall(uid);\r\n          }\r\n        };\r\n\r\n        document.getElementsByTagName('body')[0].appendChild((function () {\r\n          var s = document.createElement('script');\r\n          s.type = 'text/javascript';\r\n          s.id = uid;\r\n          s.async = 'async';\r\n          s.src = getEndpoint(server) + '/' + method + '?JSONP=' + JSONP_REQUESTS_PROPERTY_STR + '.' + uid + buildParamString();\r\n          s.onerror = function JSONPError(error) {\r\n            try {\r\n              reject(Error(error));\r\n            } finally {\r\n              cleanupCall(uid);\r\n            }\r\n          };\r\n          return s;\r\n        })());\r\n\r\n        if (timeoutTimer) {\r\n          clearTimeout(timeoutTimer);\r\n        }\r\n\r\n\r\n        timeoutTimer = setTimeout(function () {\r\n          if (window[JSONP_REQUESTS_PROPERTY_STR].hasOwnProperty(uid)) {\r\n            window[JSONP_REQUESTS_PROPERTY_STR][uid]({\r\n              error: {\r\n                name: 'JSONPTimeout',\r\n                message: 'Could not complete the JSONP request in a timely manner (' + timeout + 's)',\r\n                target: document.getElementById(uid)\r\n              }\r\n            });\r\n            window[JSONP_REQUESTS_PROPERTY_STR][uid] = function () {\r\n              cleanupCall(uid);\r\n            };\r\n          }\r\n        }, timeout);\r\n\r\n      });\r\n    },\r\n\r\n    /**\r\n     *  Calls multiple Geotab methods at the same time. Returns an array of results corresponding to the order the calls are passed in\r\n     *  @public\r\n     *  @param {Array} calls The calls array. For each entity in this array, we expect a 1 or 2 item array: the first\r\n     *                                               item is the method name, and (optionally) the second is an object of the method parameters\r\n     *                                               eg. [\r\n     *                                                      [\"GetVersion\"],\r\n     *                                                      [\"Get\", { typeName: \"Device\", search: { serialNumber: \"GTA1234556678\" } }],\r\n     *                                                      [\"Add\", { typeName: \"Device\", entity: { name: \"New Device\", serialNumber: \"GTA0000000000\" }]\r\n     *                                                   ]\r\n     *  @return {Promise}\r\n     */\r\n    multiCall = function (server, calls, credentials) {\r\n      var formattedCalls = calls.map(function (call) {\r\n        var params = call[1];\r\n        return {\r\n          method: call[0],\r\n          params: params\r\n        };\r\n      });\r\n      return post(server, \"ExecuteMultiCall\", {\r\n        calls: formattedCalls,\r\n        credentials: credentials\r\n      });\r\n    },\r\n\r\n    api = {\r\n      post: post,\r\n      jsonp: jsonp,\r\n      multiCall: multiCall\r\n    };\r\n\r\n  if (!window.geotab) {\r\n    window.geotab = {};\r\n  }\r\n\r\n  window.geotab.api = api;\r\n\r\n  return api;\r\n}());\r\n"]}