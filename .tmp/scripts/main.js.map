{"version":3,"sources":["../../app/scripts/main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// jshint devel:true\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    \"use strict\";\r\n\r\n    var CONFIG = {\r\n            // This is the host will post to to create the database. This should be the root server in the federation.\r\n            defaultHost: \"my1.geotab.com\",\r\n            debug: true,\r\n            // Local debug config (you must create DB and admin user manually)\r\n            debugDBConfig: {\r\n                host: \"127.0.0.1\",\r\n                db: \"temp\", // loacal DB name\r\n                user: \"nickklimkovich1@geotab.com\", // DB admin user\r\n                password: \"qweqweqwe\" // DB admin user password\r\n            },\r\n            allowedSecurityRules: [ // If not empty array then Restricted Admin user will be created with permission provided\r\n                //\"AboutCheckmate\",\r\n                //\"DeviceAdmin\",\r\n                //\"DeviceAdminAdvanced\",\r\n                //\"DeviceList\",\r\n                //\"DisplayMap\",\r\n                //\"NotificationList\",\r\n                //\"TripsActivityReport\",\r\n                //\"UserSettings\"\r\n            ]\r\n        },\r\n        host = CONFIG.defaultHost,\r\n\r\n        // local - helps create local options based on selected time zone. See app/scripts/local.js.\r\n        local = geotab.local,\r\n        // call - helps make calls to MyGeotab API\r\n        call = geotab.api.post,\r\n\r\n        // DOM Elements\r\n        elError = document.querySelector(\"#error\"),\r\n        elErrorContent = document.querySelector(\"#error > span\"),\r\n        elErrorClose = document.querySelector(\"#error-close\"),\r\n        elLoading = document.querySelector(\"#loading\"),\r\n        elWaiting = document.querySelector(\"#waiting\"),\r\n\r\n        elCompanyName = document.querySelector(\"#companyName\"),\r\n        elRegistrationServerText = document.querySelector(\"#registrationServer\"),\r\n        elDatabaseNameText = document.querySelector(\"#databaseNameText\"),\r\n        elDatabaseName = document.querySelector(\"#databaseName\"),\r\n        elPhoneNumber = document.querySelector(\"#phoneNumber\"),\r\n        elFleetSize = document.querySelector(\"#fleetSize\"),\r\n        elTimeZone = document.querySelector(\"#timeZone\"),\r\n\r\n        elFirstName = document.querySelector(\"#firstName\"),\r\n        elLastName = document.querySelector(\"#lastName\"),\r\n        elEmail = document.querySelector(\"#email\"),\r\n        elPassword = document.querySelector(\"#password\"),\r\n        elConfirmPassword = document.querySelector(\"#confirmPassword\"),\r\n        elUpdates = document.querySelector(\"#updates\"),\r\n        elCaptchaImage = document.querySelector(\"#captchaImage\"),\r\n        elCaptchaAnswer = document.querySelector(\"#captchaAnswer\"),\r\n        elImportFile = document.querySelector(\"#importFile\"),\r\n\r\n        elSubmit = document.querySelector(\"#submit\"),\r\n\r\n        elRequiredInputs = document.querySelectorAll(\"input[required]\"),\r\n\r\n        // Dom helpers\r\n        /**\r\n         * Validation states\r\n         * @type {{none: string, success: string, warning: string, error: string}}\r\n         */\r\n        validationState = {\r\n            none: \"\",\r\n            success: \"has-success\",\r\n            warning: \"has-warning\",\r\n            error: \"has-error\"\r\n        },\r\n\r\n        importedConfigFile,\r\n\r\n        /**\r\n         * Change the validation state of a for input\r\n         * @param el - The element\r\n         * @param state - The validation state\r\n         */\r\n        changeValidationState = function (el, state) {\r\n            Object.keys(validationState).forEach(function (key) {\r\n                if (validationState[key]) {\r\n                    el.classList.remove(validationState[key]);\r\n                }\r\n            });\r\n            if (state) {\r\n                el.classList.add(state);\r\n            }\r\n        },\r\n\r\n        // Loading\r\n        /**\r\n         * Show loading spinner (locks UI)\r\n         */\r\n        showLoading = function () {\r\n            elLoading.style.display = \"block\";\r\n        },\r\n\r\n        /**\r\n         * Hide loading spinner\r\n         */\r\n        hideLoading = function () {\r\n            elLoading.style.display = \"none\";\r\n        },\r\n\r\n        // Errors\r\n        /**\r\n         * Show error message\r\n         * @param err - The error object\r\n         */\r\n        showError = function (err) {\r\n            var errorString = \"Error\";\r\n            if (err && (err.name || err.message)) {\r\n                errorString = (err.name ? err.name + \": \" : \"\") + (err.message || \"\");\r\n            }\r\n            elErrorContent.textContent = errorString;\r\n            elError.style.display = \"block\";\r\n        },\r\n\r\n        /**\r\n         * Hide error message\r\n         */\r\n        hideError = function () {\r\n            elError.style.display = \"none\";\r\n        },\r\n\r\n        /**\r\n         * Create a short database name from a company name\r\n         * @param companyName {string} - the name of the company\r\n         * @returns {string} - the short database name\r\n         */\r\n        createDatabaseNameFromCompany = function (companyName) {\r\n            var underscore_char = 95,\r\n                companyNameCharacters = new Array(),\r\n                i = 0,\r\n                num, num1, num2, c, charStr,\r\n                chrArray = companyName.split(\"\").map(function (c) {\r\n                    return c.charCodeAt(0);\r\n                }),\r\n                length = chrArray.length;\r\n\r\n            for (num = 0; num < length; num++) {\r\n                c = chrArray[num];\r\n                charStr = String.fromCharCode(c);\r\n                if (/\\w|\\d/.test(charStr) && (c !== underscore_char || companyNameCharacters[i - 1] !== underscore_char)) {\r\n                    num1 = i;\r\n                    i++;\r\n                    companyNameCharacters[num1] = c;\r\n                } else if (i > 0 && companyNameCharacters[i - 1] !== underscore_char) {\r\n                    num2 = i;\r\n                    i++;\r\n                    companyNameCharacters[num2] = underscore_char;\r\n                }\r\n            }\r\n\r\n            return String.fromCharCode.apply(this, companyNameCharacters);\r\n        },\r\n\r\n        // So we can clear the timeout if user is still typing\r\n        checkAvailabilityTimeout,\r\n\r\n        /**\r\n         * Check to see if the database name exists\r\n         * @param databaseName {string} - the database name\r\n         */\r\n        checkAvailability = function (databaseName) {\r\n            elDatabaseNameText.parentNode.querySelector(\".help-block\").style.display = \"none\";\r\n            changeValidationState(elDatabaseNameText.parentNode, validationState.none);\r\n            if (!databaseName) {\r\n                elWaiting.style.display = \"none\";\r\n                return;\r\n            }\r\n            elWaiting.style.display = \"block\";\r\n            if (checkAvailabilityTimeout) {\r\n                clearTimeout(checkAvailabilityTimeout);\r\n            }\r\n            checkAvailabilityTimeout = setTimeout(function () {\r\n                call(host, \"DatabaseExists\", {\r\n                    database: databaseName\r\n                })\r\n                    .then(function (result) {\r\n                        changeValidationState(elDatabaseNameText.parentNode, result ? validationState.error : validationState.success);\r\n                        elDatabaseNameText.parentNode.querySelector(\".help-block\").style.display = result ? \"block\" : \"none\";\r\n                        elWaiting.style.display = \"none\";\r\n                    }, function (err) {\r\n                        elWaiting.style.display = \"none\";\r\n                        changeValidationState(elRegistrationServerText.parentNode, validationState.error);\r\n                    });\r\n            }, 600);\r\n        },\r\n\r\n        /**\r\n         * Update the displayed short database name and check if it's availability\r\n         * @param companyName\r\n         */\r\n        updateShortDatabase = function (companyName) {\r\n            var databaseNameText = createDatabaseNameFromCompany(companyName),\r\n                databaseName = databaseNameText.slice(-1) === \"_\" ? databaseNameText.slice(0, -1) : databaseNameText;\r\n            elDatabaseNameText.value = databaseNameText;\r\n            elDatabaseName.value = databaseName;\r\n            checkAvailability(databaseName);\r\n        },\r\n\r\n        // Setup\r\n        /**\r\n         * Get a list of IANA time zones form the server and add to time zone select input\r\n         */\r\n        renderTimeZones = function () {\r\n            call(host, \"GetTimeZones\")\r\n                .then(function (timeZones) {\r\n                    elTimeZone.innerHTML = timeZones\r\n                        .sort(function (a, b) {\r\n                            var textA = a.id.toLowerCase();\r\n                            var textB = b.id.toLowerCase();\r\n                            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n                        }).map(function (timeZone) {\r\n                            return \"<option value=\\\"\" + timeZone.id + \"\\\">\" + timeZone.id + \"</option>\";\r\n                        });\r\n                }, showError);\r\n        },\r\n\r\n        // store the captcha id in scope so we can use it when we create the database\r\n        captchaId,\r\n\r\n        /**\r\n         * Render a new CAPTCHA image with a random captcha id (uuid)\r\n         */\r\n        renderCaptcha = function () {\r\n            captchaId = uuid.v4();\r\n            elCaptchaImage.setAttribute(\"src\", \"https://\" + host + \"/apiv1/GenerateCaptcha?id=\" + captchaId);\r\n            elCaptchaAnswer.value = CONFIG.debug ? \"GEOTAB\" : \"\";\r\n        },\r\n\r\n        /**\r\n         * Get the form values from the DOM\r\n         * @returns {{captchaAnswer: {id: *, answer: *}, databaseName: *, userName: *, password: *, companyDetails: {companyName: *, firstName: *, lastName: *, phoneNumber: *, resellerName: string, fleetSize: (Number|number), comments: string, signUpForNews: *}}}\r\n         */\r\n        getFormValues = function () {\r\n            return {\r\n                captchaAnswer: {\r\n                    id: captchaId,\r\n                    answer: elCaptchaAnswer.value\r\n                },\r\n                database: elDatabaseName.value,\r\n                userName: elEmail.value,\r\n                password: elPassword.value,\r\n                welcomeText: \"Welcome to ABC Fleets\",\r\n                language: \"en\",\r\n                companyDetails: {\r\n                    companyName: elCompanyName.value,\r\n                    firstName: elFirstName.value,\r\n                    lastName: elLastName.value,\r\n                    phoneNumber: elPhoneNumber.value,\r\n                    resellerName: \"ABC Fleets\",\r\n                    fleetSize: parseInt(elFleetSize.value, 10) || 0,\r\n                    comments: \"\",\r\n                    signUpForNews: elUpdates.checked,\r\n                    timeZoneId: elTimeZone.value\r\n                }\r\n            };\r\n        },\r\n\r\n        // Validation\r\n        /**\r\n         * Validate an email address\r\n         * @param email {string} - the email address\r\n         * @returns {boolean} - is the email address vailid\r\n         */\r\n        isValidEmail = function (email) {\r\n            var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\r\n            return re.test(email);\r\n        },\r\n\r\n        validatePasswordTimeout,\r\n        /**\r\n         * Validate the entered password\r\n         */\r\n        validatePassword = function () {\r\n            if (validatePasswordTimeout) {\r\n                clearTimeout(validatePasswordTimeout);\r\n            }\r\n            validatePasswordTimeout = setTimeout(function () {\r\n                var isValid = elPassword.value === elConfirmPassword.value;\r\n                var elParent = elConfirmPassword.parentNode;\r\n                changeValidationState(elParent, isValid ? validationState.success : validationState.error);\r\n                elParent.querySelector(\".help-block\").style.display = isValid ? \"none\" : \"block\";\r\n            }, 600);\r\n        },\r\n\r\n        /**\r\n         * Validate form values\r\n         * @param values {object} - the for values as retrieved by getFormValues\r\n         * @returns {boolean}\r\n         */\r\n        isFormValid = function (values) {\r\n            var isValid = true;\r\n            if (!values.companyDetails.companyName) {\r\n                isValid = false;\r\n                changeValidationState(elCompanyName.parentNode, validationState.error);\r\n            }\r\n            if (!values.database) {\r\n                isValid = false;\r\n                changeValidationState(elDatabaseNameText.parentNode, validationState.error);\r\n            }\r\n            if (!values.userName || !isValidEmail(values.userName)) {\r\n                isValid = false;\r\n                changeValidationState(elEmail.parentNode, validationState.error);\r\n            }\r\n            if (!values.companyDetails.firstName) {\r\n                isValid = false;\r\n                changeValidationState(elFirstName.parentNode, validationState.error);\r\n            }\r\n            if (!values.companyDetails.lastName) {\r\n                isValid = false;\r\n                changeValidationState(elLastName.parentNode, validationState.error);\r\n            }\r\n            if (!values.password) {\r\n                isValid = false;\r\n                changeValidationState(elPassword.parentNode, validationState.error);\r\n            }\r\n            if (!values.captchaAnswer.answer) {\r\n                isValid = false;\r\n                changeValidationState(elCaptchaAnswer.parentNode, validationState.error);\r\n            }\r\n            return isValid;\r\n        },\r\n\r\n        // Registration process\r\n        /**\r\n         * Create a database in the federation\r\n         * @param params {object} - the create database parameters\r\n         * @returns {object} - the database, user and password\r\n         */\r\n        createDatabase = function (params) {\r\n            if (CONFIG.debug) {\r\n                return createDebugDatabase(params);\r\n            }\r\n            var processResult = function (results) {\r\n                var path = results.path === \"ThisServer\" ? host : results.path;\r\n\r\n                return {\r\n                    server: path,\r\n                    credentials: results.credentials\r\n                };\r\n            };\r\n            return call(host, \"CreateDatabase2\", params).then(processResult);\r\n        },\r\n\r\n\r\n        createDebugDatabase = function () {\r\n            var processResult = function () {\r\n                return {\r\n                    server: CONFIG.debugDBConfig.host,\r\n                    credentials: {\r\n                        database: CONFIG.debugDBConfig.db,\r\n                        userName: CONFIG.debugDBConfig.user,\r\n                        password: CONFIG.debugDBConfig.password\r\n                    }\r\n                };\r\n            };\r\n            return new Promise(function (resolve, reject) {\r\n                if (CONFIG.debugDBConfig) {\r\n                    resolve(processResult());\r\n                } else {\r\n                    reject(\"There is no DEBUG_CONFIG\");\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get the administrator user from the new database\r\n         * @param options {object}\r\n         * @returns {object} - options with user\r\n         */\r\n        getUser = function (options) {\r\n            return call(options.server, \"Get\", {\r\n                credentials: options.credentials,\r\n                typeName: \"User\",\r\n                search: {\r\n                    name: options.credentials.userName\r\n                }\r\n            }).then(function (results) {\r\n                options.user = results[0];\r\n                return options;\r\n            });\r\n        },\r\n\r\n        /**\r\n         *  Create clearance\r\n         * @param options {object}\r\n         * @returns {object} - options\r\n         */\r\n        createClearance = function (options) {\r\n            var user = options.user;\r\n\r\n            if (!CONFIG.allowedSecurityRules.length) {\r\n                return new Promise(function (resolve) {\r\n                    return resolve(options);\r\n                });\r\n            }\r\n\r\n            return call(options.server, \"Add\", {\r\n                credentials: options.credentials,\r\n                typeName: \"Group\",\r\n                entity: {\r\n                    id: null,\r\n                    parent: {id: \"GroupNothingSecurityId\"},\r\n                    name: \"Restricted Admin\",\r\n                    securityFilters: CONFIG.allowedSecurityRules.map(function (permission) {\r\n                        return {\r\n                            isAdd: true,\r\n                            securityIdentifier: permission\r\n                        }\r\n                    }),\r\n                    color: {a: 0, b: 0, g: 0, r: 0}\r\n                }\r\n            }).then(function (clearenceId) {\r\n                // pass on the options to the next promise\r\n                user.securityGroups = [{\r\n                    id: clearenceId,\r\n                    color: {\"r\": 0, \"g\": 0, \"b\": 0, \"a\": 255}\r\n                }];\r\n                return options;\r\n            });\r\n        },\r\n\r\n        /**\r\n         *  Set up the administrator with localized settings based on the selected time zone\r\n         * @param options {object}\r\n         * @returns {object} - options\r\n         */\r\n        setUserDefaults = function (options) {\r\n            var timeZone = elTimeZone.value,\r\n                continent = local.getContinentByTimeZone(timeZone),\r\n                user = options.user;\r\n\r\n            user.timeZoneId = timeZone;\r\n            user.isMetric = local.getIsMetricByTimeZone(timeZone);\r\n            user.fuelEconomyUnit = local.getFuelEconomyUnitByTimeZone(timeZone);\r\n            user.dateFormat = local.getDateTimeFormatByTimeZone(timeZone);\r\n            user.mapViews = local.getMapViewsByTimeZone(continent);\r\n            user.firstName = elFirstName.value;\r\n            user.lastName = elLastName.value;\r\n            // Could also set the user's language here (en,fr,es,de,ja): user.language = 'en';\r\n\r\n            return call(options.server, \"Set\", {\r\n                credentials: options.credentials,\r\n                typeName: \"User\",\r\n                entity: user\r\n            }).then(function () {\r\n                // pass on the options to the next promise\r\n                return options;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Upload config file\r\n         * @param options {object}\r\n         * @returns {object} - options\r\n         */\r\n        uploadConfigFile = function (options) {\r\n\r\n            return new Promise(function (resolve, reject) {\r\n                var fileReader = new FileReader(),\r\n                    errorHandler = function (evt) {\r\n                        reject(evt.target.error);\r\n                    };\r\n\r\n                if (!importedConfigFile) {\r\n                    return resolve(options);\r\n                }\r\n\r\n                fileReader.onerror = errorHandler;\r\n                fileReader.onabort = function() {\r\n                    throw new Error(\"File read cancelled\");\r\n                };\r\n                fileReader.onload = function(e) {\r\n                    var contentString = e.target.result,\r\n                        content;\r\n                    try {\r\n                        content = JSON.parse(contentString);\r\n                    } catch(e) {\r\n                        reject({message: \"Invalid imported file's content. File's content can't be converted to a valid JSON object.\"});\r\n                    }\r\n\r\n                    options.importedConfig = content;\r\n                    resolve(options);\r\n                };\r\n\r\n                fileReader.readAsText(importedConfigFile);\r\n            });\r\n        },\r\n\r\n        /**\r\n         *  Import config\r\n         * @param options {object}\r\n         * @returns {object} - options\r\n         */\r\n\r\n        importConfig = function (options) {\r\n            var config = options.importedConfig;\r\n            return new Promise(function (resolve, reject) {\r\n                if(!config) {\r\n                    return resolve(options);\r\n                }\r\n\r\n                configImporter(config, options.user, options.server, options.credentials).import().then(function (importResults) {\r\n                    if (importResults) {\r\n                        options.user = importResults.user;\r\n                        options.importedData = importResults.importedData;\r\n                        return call(options.server, \"Set\", {\r\n                            credentials: options.credentials,\r\n                            typeName: \"User\",\r\n                            entity: options.user\r\n                        });\r\n                    }\r\n                }).then(function(){\r\n                    resolve(options);\r\n                }).catch(function (error) {\r\n                    reject(CONFIG.debug ? error : {\r\n                        message: \"Can't import configuration\"\r\n                    });\r\n                });\r\n            });\r\n        },\r\n\r\n        logout = function (options) {\r\n            return call(options.server, \"Logoff\", {\r\n                credentials: options.credentials\r\n            }).then(function () {\r\n                // pass on the options to the next promise\r\n                return options;\r\n            }, function () {\r\n                // pass on the options to the next promise\r\n                return options;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Redirect browser to database logged in with credentials\r\n         * @param options {object} - with server and credentials\r\n         */\r\n        redirect = function (options) {\r\n            // use rison to encode token and add to url\r\n            var token = rison.encode_object({\"token\": options.credentials});\r\n            window.location = \"https://\" + options.server + \"/\" + options.credentials.database + \"#\" + token;\r\n        };\r\n\r\n    elRegistrationServerText.value = host;\r\n\r\n    if (CONFIG.debug) {\r\n        elCompanyName.value = \"qqq\";\r\n        elDatabaseNameText.value = \"qqq\";\r\n        elDatabaseName.value = \"qqq\";\r\n        elPhoneNumber.value = \"qqq\";\r\n        elFleetSize.value = \"qqq\";\r\n\r\n        elRegistrationServerText.value = CONFIG.debugDBConfig.host;\r\n        elFirstName.value = \"qqq\";\r\n        elLastName.value = \"qqq\";\r\n        elEmail.value = \"qqq@qqq.com\";\r\n        elPassword.value = \"qqq\";\r\n        elConfirmPassword.value = \"qqq\";\r\n        elCaptchaAnswer.value = \"GEOTAB\";\r\n    }\r\n\r\n    // Wire up events\r\n    /**\r\n     * Watch the company name, generate the short database name from it and check it's availability\r\n     */\r\n    elCompanyName.addEventListener(\"keyup\", function () {\r\n        var splitCompanyName = elCompanyName.value.split(/\\s+/);\r\n        var databaseName = splitCompanyName.length ? splitCompanyName[0] : \"\";\r\n        elDatabaseNameText.value = databaseName;\r\n        elDatabaseName.value = databaseName;\r\n        updateShortDatabase(databaseName);\r\n    }, false);\r\n\r\n    /**\r\n     * Watch the database name and check it's availability\r\n     */\r\n    elDatabaseNameText.addEventListener(\"keyup\", function () {\r\n        updateShortDatabase(elDatabaseNameText.value);\r\n    });\r\n\r\n    elRegistrationServerText.addEventListener(\"blur\", function () {\r\n        host = elRegistrationServerText.value;\r\n        updateShortDatabase(elDatabaseNameText.value);\r\n        renderCaptcha();\r\n    });\r\n\r\n    /**\r\n     * Watch the password and check it's validity\r\n     */\r\n    elPassword.addEventListener(\"keyup\", function () {\r\n        if (elConfirmPassword.value) {\r\n            validatePassword();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Watch the password conformation and check it's validity\r\n     */\r\n    elConfirmPassword.addEventListener(\"keyup\", function () {\r\n        if (elConfirmPassword.value) {\r\n            validatePassword();\r\n        }\r\n    });\r\n\r\n    elImportFile.addEventListener(\"change\", function (e) {\r\n        var file = e.target.files && e.target.files[0];\r\n\r\n        if (file && file.name && (!importedConfigFile || (importedConfigFile.name !== file.name && importedConfigFile.lastModified !== file.lastModified))) {\r\n            importedConfigFile = file;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Watch required fields and remove field error when no longer empty\r\n     */\r\n    for (var i = 0; i < elRequiredInputs.length; i++) {\r\n        elRequiredInputs[i].addEventListener(\"keyup\", function (evt) {\r\n            if (evt.target.value) {\r\n                changeValidationState(evt.target.parentNode, validationState.none);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide error message on click\r\n     */\r\n    elErrorClose.addEventListener(\"click\", hideError);\r\n\r\n    /**\r\n     * Handel form submit\r\n     */\r\n    elSubmit.addEventListener(\"click\", function (evt) {\r\n        var formValues;\r\n\r\n        var error = function (error) {\r\n            hideLoading();\r\n\r\n            renderCaptcha();\r\n            elSubmit.removeAttribute(\"disabled\");\r\n\r\n            showError(error);\r\n            if (error.name === \"CaptchaException\") {\r\n                elCaptchaAnswer.focus();\r\n            }\r\n        };\r\n\r\n        evt.preventDefault();\r\n\r\n        elSubmit.setAttribute(\"disabled\", \"disabled\");\r\n\r\n        hideError();\r\n        formValues = getFormValues();\r\n\r\n        if (!isFormValid(formValues)) {\r\n            elSubmit.removeAttribute(\"disabled\");\r\n            return;\r\n        }\r\n\r\n        showLoading();\r\n\r\n        createDatabase(formValues)\r\n            .then(getUser)\r\n            .then(uploadConfigFile)\r\n            .then(createClearance)\r\n            .then(setUserDefaults)\r\n            .then(importConfig)\r\n            .then(logout)\r\n            .then(redirect)\r\n            .catch(error);\r\n    });\r\n\r\n    // Setup the form fields that need to request data from the API\r\n    renderCaptcha();\r\n    renderTimeZones();\r\n});\r\n"]}